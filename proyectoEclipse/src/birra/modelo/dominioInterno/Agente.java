package birra.modelo.dominioInterno;

// Generated 19/07/2017 10:20:55 by Hibernate Tools 3.4.0.CR1

import java.sql.Clob;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Agente generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "Agente", schema = "dbo", catalog = "rrhh")
public class Agente implements java.io.Serializable {

	private int legajo;
	private Art art;
	private Dependencia dependenciaByIdDependenciaOrg;
	private Especialidad especialidad;
	private Titulo titulo;
	private Dependencia dependenciaByIdDependenciaOper;
	private Nivel nivel;
	private Situacion situacion;
	private TipoDocumento tipoDocumento;
	private NivelEducacion nivelEducacion;
	private String nombre;
	private String apellido;
	private String mail;
	private String edificio;
	private String directo;
	private String interno;
	private String sexo;
	private int nroDocumento;
	private Date fechaNacimiento;
	private String cuil;
	private String tramo;
	private Integer grado;
	private Integer jornada;
	private String contactoEmergencia;
	private String telefonoEmergencia;
	private Clob infoEmergencia;
	private boolean activo;
	private UsuarioHabilitado usuarioHabilitado;
	//private Set logs = new HashSet(0);

	public Agente() {
	}

	public Agente(int legajo, Art art, Nivel nivel, Situacion situacion,
			TipoDocumento tipoDocumento, String nombre, String apellido,
			String sexo, int nroDocumento, Date fechaNacimiento, String cuil,
			boolean activo) {
		this.legajo = legajo;
		this.art = art;
		this.nivel = nivel;
		this.situacion = situacion;
		this.tipoDocumento = tipoDocumento;
		this.nombre = nombre;
		this.apellido = apellido;
		this.sexo = sexo;
		this.nroDocumento = nroDocumento;
		this.fechaNacimiento = fechaNacimiento;
		this.cuil = cuil;
		this.activo = activo;
	}

	public Agente(int legajo, Art art,
			Dependencia dependenciaByIdDependenciaOrg,
			Especialidad especialidad, Titulo titulo,
			Dependencia dependenciaByIdDependenciaOper, Nivel nivel,
			Situacion situacion, TipoDocumento tipoDocumento,
			NivelEducacion nivelEducacion, String nombre, String apellido,
			String mail, String edificio, String directo, String interno,
			String sexo, int nroDocumento, Date fechaNacimiento, String cuil,
			String tramo, Integer grado, Integer jornada,
			String contactoEmergencia, String telefonoEmergencia,
			Clob infoEmergencia, boolean activo,
			UsuarioHabilitado usuarioHabilitado) {
		this.legajo = legajo;
		this.art = art;
		this.dependenciaByIdDependenciaOrg = dependenciaByIdDependenciaOrg;
		this.especialidad = especialidad;
		this.titulo = titulo;
		this.dependenciaByIdDependenciaOper = dependenciaByIdDependenciaOper;
		this.nivel = nivel;
		this.situacion = situacion;
		this.tipoDocumento = tipoDocumento;
		this.nivelEducacion = nivelEducacion;
		this.nombre = nombre;
		this.apellido = apellido;
		this.mail = mail;
		this.edificio = edificio;
		this.directo = directo;
		this.interno = interno;
		this.sexo = sexo;
		this.nroDocumento = nroDocumento;
		this.fechaNacimiento = fechaNacimiento;
		this.cuil = cuil;
		this.tramo = tramo;
		this.grado = grado;
		this.jornada = jornada;
		this.contactoEmergencia = contactoEmergencia;
		this.telefonoEmergencia = telefonoEmergencia;
		this.infoEmergencia = infoEmergencia;
		this.activo = activo;
		this.usuarioHabilitado = usuarioHabilitado;
	}

	@Id
	@Column(name = "legajo", unique = true, nullable = false)
	public int getLegajo() {
		return this.legajo;
	}

	public void setLegajo(int legajo) {
		this.legajo = legajo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idART", nullable = false)
	public Art getArt() {
		return this.art;
	}

	public void setArt(Art art) {
		this.art = art;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idDependenciaOrg")
	public Dependencia getDependenciaByIdDependenciaOrg() {
		return this.dependenciaByIdDependenciaOrg;
	}

	public void setDependenciaByIdDependenciaOrg(
			Dependencia dependenciaByIdDependenciaOrg) {
		this.dependenciaByIdDependenciaOrg = dependenciaByIdDependenciaOrg;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEspecialidad")
	public Especialidad getEspecialidad() {
		return this.especialidad;
	}

	public void setEspecialidad(Especialidad especialidad) {
		this.especialidad = especialidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTitulo")
	public Titulo getTitulo() {
		return this.titulo;
	}

	public void setTitulo(Titulo titulo) {
		this.titulo = titulo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idDependenciaOper")
	public Dependencia getDependenciaByIdDependenciaOper() {
		return this.dependenciaByIdDependenciaOper;
	}

	public void setDependenciaByIdDependenciaOper(
			Dependencia dependenciaByIdDependenciaOper) {
		this.dependenciaByIdDependenciaOper = dependenciaByIdDependenciaOper;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idNivel", nullable = false)
	public Nivel getNivel() {
		return this.nivel;
	}

	public void setNivel(Nivel nivel) {
		this.nivel = nivel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idSituacion", nullable = false)
	public Situacion getSituacion() {
		return this.situacion;
	}

	public void setSituacion(Situacion situacion) {
		this.situacion = situacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTipoDoc", nullable = false)
	public TipoDocumento getTipoDocumento() {
		return this.tipoDocumento;
	}

	public void setTipoDocumento(TipoDocumento tipoDocumento) {
		this.tipoDocumento = tipoDocumento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idNivelEducacion")
	public NivelEducacion getNivelEducacion() {
		return this.nivelEducacion;
	}

	public void setNivelEducacion(NivelEducacion nivelEducacion) {
		this.nivelEducacion = nivelEducacion;
	}

	@Column(name = "nombre", nullable = false, length = 150)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido", nullable = false, length = 150)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "mail", length = 150)
	public String getMail() {
		return this.mail;
	}

	public void setMail(String mail) {
		this.mail = mail;
	}

	@Column(name = "edificio", length = 100)
	public String getEdificio() {
		return this.edificio;
	}

	public void setEdificio(String edificio) {
		this.edificio = edificio;
	}

	@Column(name = "directo", length = 50)
	public String getDirecto() {
		return this.directo;
	}

	public void setDirecto(String directo) {
		this.directo = directo;
	}

	@Column(name = "interno", length = 50)
	public String getInterno() {
		return this.interno;
	}

	public void setInterno(String interno) {
		this.interno = interno;
	}

	@Column(name = "sexo", nullable = false, length = 50)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	@Column(name = "nroDocumento", nullable = false)
	public int getNroDocumento() {
		return this.nroDocumento;
	}

	public void setNroDocumento(int nroDocumento) {
		this.nroDocumento = nroDocumento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaNacimiento", nullable = false, length = 23)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "cuil", nullable = false, length = 50)
	public String getCuil() {
		return this.cuil;
	}

	public void setCuil(String cuil) {
		this.cuil = cuil;
	}

	@Column(name = "tramo", length = 50)
	public String getTramo() {
		return this.tramo;
	}

	public void setTramo(String tramo) {
		this.tramo = tramo;
	}

	@Column(name = "grado")
	public Integer getGrado() {
		return this.grado;
	}

	public void setGrado(Integer grado) {
		this.grado = grado;
	}

	@Column(name = "jornada")
	public Integer getJornada() {
		return this.jornada;
	}

	public void setJornada(Integer jornada) {
		this.jornada = jornada;
	}

	@Column(name = "contactoEmergencia", length = 500)
	public String getContactoEmergencia() {
		return this.contactoEmergencia;
	}

	public void setContactoEmergencia(String contactoEmergencia) {
		this.contactoEmergencia = contactoEmergencia;
	}

	@Column(name = "telefonoEmergencia", length = 50)
	public String getTelefonoEmergencia() {
		return this.telefonoEmergencia;
	}

	public void setTelefonoEmergencia(String telefonoEmergencia) {
		this.telefonoEmergencia = telefonoEmergencia;
	}

	@Column(name = "infoEmergencia")
	public Clob getInfoEmergencia() {
		return this.infoEmergencia;
	}

	public void setInfoEmergencia(Clob infoEmergencia) {
		this.infoEmergencia = infoEmergencia;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	/*@OneToOne(fetch = FetchType.LAZY, mappedBy = "agente")
	public UsuarioHabilitado getUsuarioHabilitado() {
		return this.usuarioHabilitado;
	}

	public void setUsuarioHabilitado(UsuarioHabilitado usuarioHabilitado) {
		this.usuarioHabilitado = usuarioHabilitado;
	}*/

	/*@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "agente")
	public Set getLogs() {
		return this.logs;
	}

	@SuppressWarnings("rawtypes")
	public void setLogs(Set logs) {
		this.logs = logs;
	}*/

}
